require(magrittr)
require(dplyr)
library(tidyverse)
require(magrittr)
require(dplyr)
game <- function(N){
if(N<3) stop("Must have at least 3 doors")
prize <- sample(c(rep("goat",N-1),"car"), N)
guess <- sample(1:N,1)
game <- data.frame(door = 1:N, prize = prize, stringsAsFactors = FALSE) %>%
mutate(first_guess = case_when(
door == guess ~ 1
, TRUE ~ 0
)) %>%
mutate(potential_reveal = case_when(
first_guess == 1 ~ 0
, prize == "car" ~ 0
, TRUE ~ 1
)) %>%
mutate(reveal = 1*(rank(potential_reveal, ties.method = "random") == 3)) %>%
mutate(potential_switch = case_when(
first_guess == 1 ~ 0
, reveal == 1 ~ 0
, TRUE ~ 1
)) %>%
mutate(switch = 1*(rank(potential_switch, ties.method = "random") == 3))
c(game$prize[game$first_guess == 1], game$prize[game$switch == 1])
}
set.seed(1)
outcome <- rep(NA, 1000)
for(i in 1:1000){
result <- game(4)
if(result[1] == "goat" & result[2] == "goat" ){
outcome[i] <- 1
}else{
outcome[i] <- 0
}
}
mean(outcome)
prop.test(sum(outcome), 1000, conf.level = 0.99)
set.seed(1)
prob_difference=rep(NA, 8)
s1_outcome <- rep(NA, 1000)
s2_outcome <- rep(NA, 1000)
for(k in 1:8){
for(i in 1:1000){
result <- game(k+2)
if(result[1] == "car" ){
s1_outcome[i] <- 1
}else{
s1_outcome[i] <- 0
}
if(result[2] == "car" ){
s2_outcome[i] <- 1
}else{
s2_outcome[i] <- 0
}
}
prob_difference[k]=mean(s2_outcome)-mean(s1_outcome)
}
prob_difference
plot((3:10),prob_difference,type="b")
#P(D-|T-) = P(D-&T-)/ P(T-)
(0.95*0.999)/((0.15*0.001)+(0.95*0.999))
hospital_charges <- function(N){
group <- rbinom(N, 1, 0.5)
charges <- 0*group + rgamma(N, shape = 2, scale = 2)*(1-group)
charges
}
out <- rep(NA, 1000)
for(i in 1:1000){
result <- hospital_charges(40000)
out[i] <- quantile(result, 0.9)
}
mean(out)
out <- rep(NA, 1000)
for(i in 1:1000){
result <- hospital_charges(30)
out[i] <- mean(result)
}
hist(out, breaks = 100)
plot(density(out))
#r
pbinom(9, 30, 0.5)
#simulation
set.seed(1)
num=rep(NA,10000)
for( i in (1:10000)){
group <- rbinom(30, 1, 0.5)
if (sum(group)<10){
num[i]<-1
}
else{
num[i]<-0
}
}
mean(num)
mean=80
sd=15
pnorm(104,mean = mean,sd=sd) - pnorm(70,mean=mean,sd=sd)
#P(A|B) = P(discovered femur was from a male)/(P(discovered femur was from a male) + P(discovered femur was from a female)
P_male<-(dnorm(37,40,3.4))*0.5
P_female<-(dnorm(37,36,3.3))*0.5
P_male/(P_male+P_female)
femur_length <- 25:50
prob_male <- (dnorm(femur_length,40,3.4))*0.5 /((dnorm(femur_length,40,3.4)*0.5) + (dnorm(femur_length,36,3.3))*0.5)
plot.new()
plot.window(xlim = c(25,50), ylim = c(0,1))
lines(femur_length, prob_male)
axis(1)
axis(2)
box()
title(xlab = "Femur Length", ylab = "P(Male | femur length)")
hospital_charges <- function(N){
group <- rbinom(N, 1, 0.5)
charges <- 0*group + rgamma(N, shape = 2, scale = 2)*(1-group)
charges
}
hospital_charges(100)
#r
mean(hospital_charges(10000))
#by hand
0.5*0+0.5*2*2
gap=10000/1000
out <- rep(NA, 1000)
for(i in 1:1000){
result <- hospital_charges(40000)
result[result > gap] = gap
out[i] = mean(result)
}
mean(out)
out <- rep(NA, 1000)
for(i in 1:1000){
result <- hospital_charges(40000)
result[result > gap] = gap
out[i] = var(result)
}
mean(out)
#use mean
set.seed(1)
medians <- rep(NA,1000)
for (i in seq(1:1000)){
medians[i] <- median(rlnorm(101,0,1))
}
hist(medians, breaks = 50)
plot(density(medians))
#quantile=0.5
set.seed(1)
medians <- rep(NA,1000)
for (i in seq(1:1000)){
medians[i]<-quantile(rlnorm(101,0,1),0.5)
}
hist(medians, breaks = 50)
plot(density(medians))
Fk <- function(x,k,n){
pbinom(k-1, n, plnorm(x), lower.tail = FALSE)
}
plot(ecdf(medians), col = "red")
curve(Fk(x, 51, 101), add =T, col = "green")
legend("topleft", c("ECDF","CDF"),col = c("red","green"),lwd= 1)
out_25 <- NA
out_50 <- NA
out_75 <- NA
for (i in 1:1000){
out_25[i] <- quantile(rlnorm(101,0,1), 0.25)
}
for (i in 1:1000){
out_50[i] <- quantile(rlnorm(101,0,1), 0.5)
}
for (i in 1:1000){
out_75[i] <- quantile(rlnorm(101,0,1), 0.75)
}
out_25_95 <- quantile(out_25, 0.975)-quantile(out_25, 0.025)
out_25_95
out_50_95 <- quantile(out_50, 0.975)-quantile(out_50, 0.025)
out_50_95
out_75_95<- quantile(out_75,0.975)-quantile(out_75, 0.025)
out_75_95
min(out_25_95,out_50_95,out_75_95)
plot(density(out_25), col = "red", xlim = c(0, 4),  main = "Distribution of 25th, 50th, 75th quantiles",xlab = "x")
lines(density(out_50), col = "green")
lines(density(out_75), col = "blue")
legend("topright", c("25th","50th", "75th"),col = c("red","green", "blue"),lwd= 1)
Hmisc::getHdata(nhgh)
d1 <- nhgh[1:500,]
library(stats4)
library(tidyr)
library(magrittr)
library(dplyr)
ht <-  d1 %>% filter(age > 18 , sex == "male") %>% select(ht)%>% pull(ht)
nLL <- function(mean, sd){
fs <- dnorm(
x = d1$ht
,mean = mean
,sd = sd
,log = TRUE
)
-sum(fs)
}
fit <- mle(
nLL
,start = list(mean = mean(ht), sd = sd(ht))
,method = "L-BFGS-B"
,lower = c(0,0.01)
)
hist(ht, freq=F,breaks = 20,xlab = "male adult height",xlim = c(130, 200))
curve(dnorm(x, mean = coef(fit)[1],sd =coef(fit)[2]),add=T)
female_adult_bmi <-  d1 %>% filter(age > 18 , sex == "female") %>% select(bmi)%>% pull(bmi)
mm_shape_gamma=mean(female_adult_bmi)^2/var(female_adult_bmi)
mm_scale_gamma=var(female_adult_bmi)/mean(female_adult_bmi)
hist(female_adult_bmi,breaks=10,freq = F,xlim = c(0, 100))
curve(dgamma(x,shape=mm_shape_gamma,scale=mm_scale_gamma),add=T)
adult_SCr <-  d1 %>% filter(age > 18 ) %>% select(SCr) %>% na.omit%>% pull(SCr)
plot(density(adult_SCr,kernal= "gaussian"))
bwt <- MASS::birthwt
bwt_smoke <-  bwt %>% filter(smoke == 1) %>% select(bwt) %>%pull(bwt)
out <- rep(NA, 10000)
for (i in 1:10000){
out[i] <- mean(sample(bwt_smoke, length(bwt_smoke), replace = T))
}
quantile(out, c(0.025, 0.975))
#data
bwt_smoke <- bwt %>% filter(smoke == 1) %>% select(bwt)%>%pull(bwt)
#Without Short Cut
R <- 2000
means <- rep(NA, R)
mean_mle <- mean(bwt_smoke)
sd_mle <- sd(bwt_smoke)
for(i in 1:R){
s <- rnorm(length(bwt_smoke), mean = mean_mle, sd = sd_mle)
means[i] <- mean(s)
}
quantile(means, c(0.025, 0.975))
t.test(bwt_smoke)
set.seed(1)
bwt_nosmoke <-  bwt %>% filter(smoke == 0) %>% select(bwt) %>% pull(bwt)
bwt_smoke <-  bwt %>% filter(smoke == 1) %>% select(bwt) %>% pull(bwt)
out <- rep(NA, 1000)
out_smoke <- NA
out_nosmoke <- NA
for (i in 1:1000){
out_smoke[i] <- mean(sample(bwt_smoke, length(bwt_smoke), replace = T) )
out_nosmoke[i] <- mean(sample(bwt_nosmoke, length(bwt_nosmoke), replace = T))
out[i] <- out_smoke[i]/out_nosmoke[i]
}
quantile(out, c(0.05/2, 1-0.05/2))
prop.test(c(30, 35), c(100,100))
prop.test(c(600, 619), c(2000, 2000))
prop.test(c(630, 654), c(2100, 2100))
cor.test(nhgh$armc, nhgh$arml)
library(stats4)
library(tidyr)
library(magrittr)
library(dplyr)
ht <-  d1 %>% filter(age > 18 , sex == "male") %>% select(ht)%>% pull(ht)
mean_mle=mean(ht)
sd_mle=sd(ht)
hist(ht, freq=F,breaks = 20,xlab = "male adult height",xlim = c(130, 200))
curve(dnorm(x, mean =mean_mle,sd =sd_mle,add=T))
library(stats4)
library(tidyr)
library(magrittr)
library(dplyr)
ht <-  d1 %>% filter(age > 18 , sex == "male") %>% select(ht)%>% pull(ht)
mean_mle=mean(ht)
sd_mle=sd(ht)
hist(ht, freq=F,breaks = 20,xlab = "male adult height",xlim = c(130, 200))
curve(dnorm(x, mean =mean_mle,sd =sd_mle),add=T)
adult_SCr <-  d1 %>% filter(age > 18 ) %>% select(SCr) %>% na.omit%>% pull(SCr)
plot(density(adult_SCr,kernal= "gaussian"), main="Distribution of creatinine (SCr)")
library(stats4)
library(tidyr)
library(magrittr)
library(dplyr)
ht <-  d1 %>% filter(age > 18 , sex == "male") %>% select(ht)%>% pull(ht)
mean_mle=mean(ht)
sd_mle=sd(ht)
hist(ht, freq=F,breaks = 20,xlab = "male adult height",xlim = c(130, 200))
curve(dnorm(x, mean =mean_mle,sd =sd_mle),col='red',add=T)
female_adult_bmi <-  d1 %>% filter(age > 18 , sex == "female") %>% select(bmi)%>% pull(bmi)
mm_shape=mean(female_adult_bmi)^2/var(female_adult_bmi)
mm_scale=var(female_adult_bmi)/mean(female_adult_bmi)
hist(female_adult_bmi,breaks=10,freq = F,xlim = c(0, 100))
curve(dgamma(x,shape=mm_shape,scale=mm_scale),col='red',add=T)
adult_SCr <-  d1 %>% filter(age > 18) %>% select(SCr) %>% na.omit%>% pull(SCr)
plot(density(adult_SCr,kernal= "gaussian"), main="Distribution of creatinine (SCr)")
adult_SCr <-  d1 %>% filter(age > 18) %>% select(SCr) %>% na.omit%>% pull(SCr)
plot(density(adult_SCr,kernal= "gaussian"), main="Distribution of creatinine (SCr)",xlab='creatinine (SCr)')
adult_SCr
adult_SCr <-  d1 %>% filter(age > 18) %>% select(SCr) %>% na.omit%>% pull(SCr)
plot(density(adult_SCr,kernal= "gaussian"), main="Distribution of creatinine (SCr)",xlab='Adult creatinine (SCr)')
bwt <- MASS::birthwt
bwt_smoke <-  bwt %>% filter(smoke == 1) %>% select(bwt) %>%pull(bwt)
out <- rep(NA, 10000)
for (i in 1:10000){
out[i] <- mean(sample(bwt_smoke, length(bwt_smoke), replace = T))
}
quantile(out, c(0.025, 0.975))
bwt_smoke <-  bwt %>% filter(smoke == 1) %>% select(bwt) %>%pull(bwt)
out <- rep(NA, 10000)
for (i in 1:10000){
out[i] <- mean(sample(bwt_smoke, length(bwt_smoke), replace = T))
}
quantile(out, c(0.025, 0.975))
t.test(bwt_smoke)
z.test(bwt_smoke)
t.test(bwt_smoke)
?z.test()
t.test(bwt_smoke)
?z.test
t.test(bwt_smoke)
?z.test
require(BSDA)
install.packages("devtools", dependencies = TRUE)
devtools::install_github('alanarnholt/BSDA')
#devtools::install_github('alanarnholt/BSDA')
z.test(bwt_smoke)
#devtools::install_github('alanarnholt/BSDA')
z.test(bwt_smoke, sigma.x=sd(bwt_smoke))
devtools::install_github('alanarnholt/BSDA')
z.test(bwt_smoke, sigma.x=sd(bwt_smoke))
install_github('alanarnholt/BSDA')
devtools::install_github('alanarnholt/BSDA')
z.test(bwt_smoke, sigma.x=sd(bwt_smoke))
devtools::install_github('alanarnholt/BSDA')
install.packages('BSDA')
z.test(bwt_smoke, sigma.x=sd(bwt_smoke))
#devtools::install_github('alanarnholt/BSDA')
#install.packages('BSDA')
library(BSDA)
z.test(bwt_smoke, sigma.x=sd(bwt_smoke))
length(bwt_smoke)
?dnrom
?dnorm
order_25 <- NA
order_50 <- NA
order_75 <- NA
for (i in 1:1000){
order_25[i] <- quantile(rlnorm(101,0,1), 0.25)
}
for (i in 1:1000){
order_50[i] <- quantile(rlnorm(101,0,1), 0.5)
}
for (i in 1:1000){
order_75[i] <- quantile(rlnorm(101,0,1), 0.75)
}
order_25_95 <- quantile(order_25, 0.975)-quantile(order_25, 0.025)
order_25_95
order_50_95 <- quantile(order_50, 0.975)-quantile(order_50, 0.025)
order_50_95
order_75_95<- quantile(order_75,0.975)-quantile(order_75, 0.025)
order_75_95
min(order_25_95,order_50_95,order_75_95)
